/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Chained } from "../Chained";

export class Chained__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Chained> {
    return super.deploy(overrides || {}) as Promise<Chained>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Chained {
    return super.attach(address) as Chained;
  }
  connect(signer: Signer): Chained__factory {
    return super.connect(signer) as Chained__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Chained {
    return new Contract(address, _abi, signerOrProvider) as Chained;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "Activated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "successor",
        type: "address",
      },
    ],
    name: "ActivatedSuccessor",
    type: "event",
  },
  {
    inputs: [],
    name: "activate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "successor",
        type: "address",
      },
    ],
    name: "activateSuccessor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "activationBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "predecessorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "successorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b0319163317905561045c806100326000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806308ffce241461005c5780630f15f4c0146100805780631d88c05b1461008a57806380faa3d21461009257806381c0de75146100ac575b600080fd5b6100646100d2565b604080516001600160a01b039092168252519081900360200190f35b6100886100e1565b005b6100646101af565b61009a6101be565b60408051918252519081900360200190f35b610088600480360360208110156100c257600080fd5b50356001600160a01b03166101c4565b6001546001600160a01b031681565b6001546001600160a01b0316331461012f576040805162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b60035415610175576040805162461bcd60e51b815260206004820152600e60248201526d416c72656164792061637469766560901b604482015290519081900360640190fd5b43600381905560408051918252517f3ec796be1be7d03bff3a62b9fa594a60e947c1809bced06d929f145308ae57ce9181900360200190a1565b6002546001600160a01b031681565b60035481565b6000546001600160a01b03163314610217576040805162461bcd60e51b815260206004820152601160248201527037b7363ca1b7b73a3930b1ba27bbb732b960791b604482015290519081900360640190fd5b60006003541161025f576040805162461bcd60e51b815260206004820152600e60248201526d4d7573742062652061637469766560901b604482015290519081900360640190fd5b6002546001600160a01b0316156102b0576040805162461bcd60e51b815260206004820152601060248201526f416c726561647920696e61637469766560801b604482015290519081900360640190fd5b6001600160a01b038116301415610300576040805162461bcd60e51b815260206004820152600f60248201526e21b0b713ba1031329034ba39b2b63360891b604482015290519081900360640190fd5b610309816103ff565b61034b576040805162461bcd60e51b815260206004820152600e60248201526d139bdd08184818dbdb9d1c9858dd60921b604482015290519081900360640190fd5b6000819050806001600160a01b0316630f15f4c06040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561038b57600080fd5b505af115801561039f573d6000803e3d6000fd5b5050600280546001600160a01b0319166001600160a01b03861690811790915560408051438152602081019290925280517f1f8bdb9825a71b7560200e2279fd4b503ac6814e369318e761928502882ee11a945091829003019150a15050565b6000806001600160a01b03831661041a576000915050610421565b5050803b15155b91905056fea264697066735822122037193a6d46abf8ccab2cd5d545bb83a60e1040e98ce0a7835f38d0af9129be0064736f6c63430007030033";
