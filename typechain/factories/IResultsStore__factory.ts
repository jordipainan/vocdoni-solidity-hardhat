/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer } from "ethers";
import { Provider } from "@ethersproject/providers";

import type { IResultsStore } from "../IResultsStore";

export class IResultsStore__factory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IResultsStore {
    return new Contract(address, _abi, signerOrProvider) as IResultsStore;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
    ],
    name: "ResultsAvailable",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
    ],
    name: "getResults",
    outputs: [
      {
        internalType: "uint32[][]",
        name: "tally",
        type: "uint32[][]",
      },
      {
        internalType: "uint32",
        name: "height",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "processesAddr",
        type: "address",
      },
    ],
    name: "setProcessesAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        internalType: "uint32[][]",
        name: "tally",
        type: "uint32[][]",
      },
      {
        internalType: "uint32",
        name: "height",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "vochainId",
        type: "uint32",
      },
    ],
    name: "setResults",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];
