/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Namespaces } from "../Namespaces";

export class Namespaces__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Namespaces> {
    return super.deploy(overrides || {}) as Promise<Namespaces>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Namespaces {
    return super.attach(address) as Namespaces;
  }
  connect(signer: Signer): Namespaces__factory {
    return super.connect(signer) as Namespaces__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Namespaces {
    return new Contract(address, _abi, signerOrProvider) as Namespaces;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "namespace",
        type: "uint32",
      },
    ],
    name: "NamespaceRegistered",
    type: "event",
  },
  {
    inputs: [],
    name: "namespaceCount",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "namespaces",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "namespaceId",
        type: "uint32",
      },
    ],
    name: "processContractAt",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "register",
    outputs: [
      {
        internalType: "uint32",
        name: "result",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103a6806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631aa3a008146100515780636d3005ae1461006f578063b40ec02b1461009f578063f631514c146100bd575b600080fd5b6100596100ed565b60405161006691906102fc565b60405180910390f35b6100896004803603810190610084919061029a565b6101f4565b60405161009691906102e1565b60405180910390f35b6100a761023c565b6040516100b491906102fc565b60405180910390f35b6100d760048036038101906100d2919061029a565b610252565b6040516100e491906102e1565b60405180910390f35b600060018060009054906101000a900463ffffffff1601600160006101000a81548163ffffffff021916908363ffffffff16021790555033600080600160009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f6342a3b1a0f483c8ec694afd510f5f330e4792137228eb79e3e14458f78c5746600160009054906101000a900463ffffffff166040516101d491906102fc565b60405180910390a1600160009054906101000a900463ffffffff16905090565b60008060008363ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600160009054906101000a900463ffffffff1681565b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008135905061029481610359565b92915050565b6000602082840312156102ac57600080fd5b60006102ba84828501610285565b91505092915050565b6102cc81610317565b82525050565b6102db81610349565b82525050565b60006020820190506102f660008301846102c3565b92915050565b600060208201905061031160008301846102d2565b92915050565b600061032282610329565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600063ffffffff82169050919050565b61036281610349565b811461036d57600080fd5b5056fea2646970667358221220444cc9a7158860fd61d2168c2cc3c8fbc9494e8da9a6791486eb4169c4f8a4d664736f6c63430007030033";
